# CODE CHALLENGE: C++ FUNCTIONS
-------------------------------

* How It Works
--------------
Roll up your sleeves and get yourself in the mood for functions, because it’s code challenge time!

Say what? Here’s how it works:

	. Each exercise in this lesson has a C++ function for you to build.

	. Each challenge has many solutions and we encourage you to be creative.

	. We don’t care what goes on in the function as long as it works the way it should. (Notice those tests in main() for each function.)

As a refresher, C++ function syntax looks like this:

return_type function_name(paramater1, parameter2) {
 
   // Code block here
 
   return output_if_there_is_any;
 
}

For example, with real code this might look like:

bool is_even(int number) {
 
  if (number % 2 == 0) {
 
    return true;
 
  }
 
  return false;
 
}

Best of luck!

==================================================================================================================================================================

* Introduction
--------------
introduction()

Instructions
1.
Write a function introduction() with no return value that has:

	. std::string parameter named first_name.

	. std::string parameter named last_name.

The function should print the last_name, followed by a comma, a space, first_name another space, and finally last_name again.

For example, introduction("James", "Bond"); should print the following:

Bond, James Bond

main.cpp
--------
#include <iostream>

// Define introduction() here:
void introduction(std::string first_name, std::string last_name) {
  std::cout << last_name << ", " << first_name << " " << last_name;
}

int main() {
  
  introduction("Beyonce", "Knowles");
  
}

==================================================================================================================================================================

* Average
---------
average()

Instructions
1.
Write a function average() that takes:

	. A double parameter named num1.

	. A double parameter named num2.

The function should return a double that is the average of the arguments passed in.

main.cpp
--------
#include <iostream>

// Define average() here:
double average(double num1, double num2) {
  return (num1 + num2) / 2;
}

int main() {
  
  std::cout << average(42.0, 24.0) << "\n";
  std::cout << average(1.0, 2.0) << "\n";
  
}

==================================================================================================================================================================

* Tenth Power
-------------
tenth_power()

Instructions
1.
Write a function named tenth_power() that has:

An int parameter named num.
The function should return num raised to the 10th power.

main.cpp
--------
#include <iostream>
#include <cmath>

// Define tenth_power() here:
int tenth_power(int num) {
  return pow(num, 10);
}

int main() {
  
  std::cout << tenth_power(0) << "\n";
  std::cout << tenth_power(1) << "\n";
  std::cout << tenth_power(2) << "\n";
  
}

==================================================================================================================================================================































































